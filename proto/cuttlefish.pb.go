// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: proto/cuttlefish.proto

package cuttlefish

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TentacleKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude uint32 `protobuf:"varint,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude  uint32 `protobuf:"varint,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Sequence  uint32 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *TentacleKey) Reset() {
	*x = TentacleKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TentacleKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TentacleKey) ProtoMessage() {}

func (x *TentacleKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TentacleKey.ProtoReflect.Descriptor instead.
func (*TentacleKey) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{0}
}

func (x *TentacleKey) GetLongitude() uint32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *TentacleKey) GetLatitude() uint32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *TentacleKey) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type TentacleVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connected bool  `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TentacleVal) Reset() {
	*x = TentacleVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TentacleVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TentacleVal) ProtoMessage() {}

func (x *TentacleVal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TentacleVal.ProtoReflect.Descriptor instead.
func (*TentacleVal) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{1}
}

func (x *TentacleVal) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *TentacleVal) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Tentacle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *TentacleKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val *TentacleVal `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Tentacle) Reset() {
	*x = Tentacle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tentacle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tentacle) ProtoMessage() {}

func (x *Tentacle) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tentacle.ProtoReflect.Descriptor instead.
func (*Tentacle) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{2}
}

func (x *Tentacle) GetKey() *TentacleKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Tentacle) GetVal() *TentacleVal {
	if x != nil {
		return x.Val
	}
	return nil
}

type TentacleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TentacleList []*Tentacle `protobuf:"bytes,1,rep,name=tentacle_list,json=tentacleList,proto3" json:"tentacle_list,omitempty"`
}

func (x *TentacleList) Reset() {
	*x = TentacleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TentacleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TentacleList) ProtoMessage() {}

func (x *TentacleList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TentacleList.ProtoReflect.Descriptor instead.
func (*TentacleList) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{3}
}

func (x *TentacleList) GetTentacleList() []*Tentacle {
	if x != nil {
		return x.TentacleList
	}
	return nil
}

type GetTentacleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTentacleReq) Reset() {
	*x = GetTentacleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTentacleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTentacleReq) ProtoMessage() {}

func (x *GetTentacleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTentacleReq.ProtoReflect.Descriptor instead.
func (*GetTentacleReq) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{4}
}

func (x *GetTentacleReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTentacleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TentacleList `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetTentacleResp) Reset() {
	*x = GetTentacleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTentacleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTentacleResp) ProtoMessage() {}

func (x *GetTentacleResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTentacleResp.ProtoReflect.Descriptor instead.
func (*GetTentacleResp) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{5}
}

func (x *GetTentacleResp) GetResult() *TentacleList {
	if x != nil {
		return x.Result
	}
	return nil
}

type BatchGetTentacleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []uint32 `protobuf:"varint,1,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
}

func (x *BatchGetTentacleReq) Reset() {
	*x = BatchGetTentacleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetTentacleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetTentacleReq) ProtoMessage() {}

func (x *BatchGetTentacleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetTentacleReq.ProtoReflect.Descriptor instead.
func (*BatchGetTentacleReq) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{6}
}

func (x *BatchGetTentacleReq) GetIdList() []uint32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

type BatchGetTentacleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[uint32]*TentacleList `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchGetTentacleResp) Reset() {
	*x = BatchGetTentacleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetTentacleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetTentacleResp) ProtoMessage() {}

func (x *BatchGetTentacleResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetTentacleResp.ProtoReflect.Descriptor instead.
func (*BatchGetTentacleResp) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{7}
}

func (x *BatchGetTentacleResp) GetResult() map[uint32]*TentacleList {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetTentacleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	List *TentacleList `protobuf:"bytes,2,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *SetTentacleReq) Reset() {
	*x = SetTentacleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTentacleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTentacleReq) ProtoMessage() {}

func (x *SetTentacleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTentacleReq.ProtoReflect.Descriptor instead.
func (*SetTentacleReq) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{8}
}

func (x *SetTentacleReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetTentacleReq) GetList() *TentacleList {
	if x != nil {
		return x.List
	}
	return nil
}

type SetTentacleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTentacleResp) Reset() {
	*x = SetTentacleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTentacleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTentacleResp) ProtoMessage() {}

func (x *SetTentacleResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTentacleResp.ProtoReflect.Descriptor instead.
func (*SetTentacleResp) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{9}
}

type DelTentacleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	List *TentacleList `protobuf:"bytes,2,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *DelTentacleReq) Reset() {
	*x = DelTentacleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTentacleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTentacleReq) ProtoMessage() {}

func (x *DelTentacleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTentacleReq.ProtoReflect.Descriptor instead.
func (*DelTentacleReq) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{10}
}

func (x *DelTentacleReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelTentacleReq) GetList() *TentacleList {
	if x != nil {
		return x.List
	}
	return nil
}

type DelTentacleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *DelTentacleResp) Reset() {
	*x = DelTentacleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cuttlefish_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTentacleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTentacleResp) ProtoMessage() {}

func (x *DelTentacleResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cuttlefish_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTentacleResp.ProtoReflect.Descriptor instead.
func (*DelTentacleResp) Descriptor() ([]byte, []int) {
	return file_proto_cuttlefish_proto_rawDescGZIP(), []int{11}
}

func (x *DelTentacleResp) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

var File_proto_cuttlefish_proto protoreflect.FileDescriptor

var file_proto_cuttlefish_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69,
	0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65,
	0x66, 0x69, 0x73, 0x68, 0x22, 0x63, 0x0a, 0x0b, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x49, 0x0a, 0x0b, 0x54, 0x65, 0x6e,
	0x74, 0x61, 0x63, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x60, 0x0a, 0x08, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x12, 0x29, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x43, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x54, 0x65, 0x6e, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c,
	0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x49, 0x0a, 0x0c, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x74, 0x65, 0x6e, 0x74, 0x61, 0x63,
	0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x43, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x54, 0x65, 0x6e, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x52, 0x0c, 0x74, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66,
	0x69, 0x73, 0x68, 0x2e, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2e, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x14, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x44, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x53, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65,
	0x66, 0x69, 0x73, 0x68, 0x2e, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43,
	0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x4e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x54, 0x65, 0x6e,
	0x74, 0x61, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x29, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x32, 0xc3, 0x02, 0x0a, 0x0a, 0x63,
	0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c,
	0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73,
	0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65,
	0x66, 0x69, 0x73, 0x68, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e,
	0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c,
	0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x43, 0x75,
	0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74,
	0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65,
	0x66, 0x69, 0x73, 0x68, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x6e,
	0x74, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69,
	0x73, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x44,
	0x65, 0x6c, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x65, 0x73, 0x74, 0x6c, 0x61, 0x73, 0x63, 0x6f, 0x72, 0x70, 0x69, 0x6f, 0x6e, 0x2f, 0x43, 0x75,
	0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73, 0x68, 0x3b, 0x63, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x66,
	0x69, 0x73, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_cuttlefish_proto_rawDescOnce sync.Once
	file_proto_cuttlefish_proto_rawDescData = file_proto_cuttlefish_proto_rawDesc
)

func file_proto_cuttlefish_proto_rawDescGZIP() []byte {
	file_proto_cuttlefish_proto_rawDescOnce.Do(func() {
		file_proto_cuttlefish_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_cuttlefish_proto_rawDescData)
	})
	return file_proto_cuttlefish_proto_rawDescData
}

var file_proto_cuttlefish_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_cuttlefish_proto_goTypes = []interface{}{
	(*TentacleKey)(nil),          // 0: Cuttlefish.TentacleKey
	(*TentacleVal)(nil),          // 1: Cuttlefish.TentacleVal
	(*Tentacle)(nil),             // 2: Cuttlefish.Tentacle
	(*TentacleList)(nil),         // 3: Cuttlefish.TentacleList
	(*GetTentacleReq)(nil),       // 4: Cuttlefish.GetTentacleReq
	(*GetTentacleResp)(nil),      // 5: Cuttlefish.GetTentacleResp
	(*BatchGetTentacleReq)(nil),  // 6: Cuttlefish.BatchGetTentacleReq
	(*BatchGetTentacleResp)(nil), // 7: Cuttlefish.BatchGetTentacleResp
	(*SetTentacleReq)(nil),       // 8: Cuttlefish.SetTentacleReq
	(*SetTentacleResp)(nil),      // 9: Cuttlefish.SetTentacleResp
	(*DelTentacleReq)(nil),       // 10: Cuttlefish.DelTentacleReq
	(*DelTentacleResp)(nil),      // 11: Cuttlefish.DelTentacleResp
	nil,                          // 12: Cuttlefish.BatchGetTentacleResp.ResultEntry
}
var file_proto_cuttlefish_proto_depIdxs = []int32{
	0,  // 0: Cuttlefish.Tentacle.key:type_name -> Cuttlefish.TentacleKey
	1,  // 1: Cuttlefish.Tentacle.val:type_name -> Cuttlefish.TentacleVal
	2,  // 2: Cuttlefish.TentacleList.tentacle_list:type_name -> Cuttlefish.Tentacle
	3,  // 3: Cuttlefish.GetTentacleResp.result:type_name -> Cuttlefish.TentacleList
	12, // 4: Cuttlefish.BatchGetTentacleResp.result:type_name -> Cuttlefish.BatchGetTentacleResp.ResultEntry
	3,  // 5: Cuttlefish.SetTentacleReq.list:type_name -> Cuttlefish.TentacleList
	3,  // 6: Cuttlefish.DelTentacleReq.list:type_name -> Cuttlefish.TentacleList
	3,  // 7: Cuttlefish.BatchGetTentacleResp.ResultEntry.value:type_name -> Cuttlefish.TentacleList
	4,  // 8: Cuttlefish.cuttlefish.GetTentacle:input_type -> Cuttlefish.GetTentacleReq
	6,  // 9: Cuttlefish.cuttlefish.BatchGetTentacle:input_type -> Cuttlefish.BatchGetTentacleReq
	8,  // 10: Cuttlefish.cuttlefish.SetTentacle:input_type -> Cuttlefish.SetTentacleReq
	10, // 11: Cuttlefish.cuttlefish.DelTentacle:input_type -> Cuttlefish.DelTentacleReq
	5,  // 12: Cuttlefish.cuttlefish.GetTentacle:output_type -> Cuttlefish.GetTentacleResp
	7,  // 13: Cuttlefish.cuttlefish.BatchGetTentacle:output_type -> Cuttlefish.BatchGetTentacleResp
	9,  // 14: Cuttlefish.cuttlefish.SetTentacle:output_type -> Cuttlefish.SetTentacleResp
	11, // 15: Cuttlefish.cuttlefish.DelTentacle:output_type -> Cuttlefish.DelTentacleResp
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_cuttlefish_proto_init() }
func file_proto_cuttlefish_proto_init() {
	if File_proto_cuttlefish_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_cuttlefish_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TentacleKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TentacleVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tentacle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TentacleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTentacleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTentacleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetTentacleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetTentacleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTentacleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTentacleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTentacleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cuttlefish_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTentacleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_cuttlefish_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cuttlefish_proto_goTypes,
		DependencyIndexes: file_proto_cuttlefish_proto_depIdxs,
		MessageInfos:      file_proto_cuttlefish_proto_msgTypes,
	}.Build()
	File_proto_cuttlefish_proto = out.File
	file_proto_cuttlefish_proto_rawDesc = nil
	file_proto_cuttlefish_proto_goTypes = nil
	file_proto_cuttlefish_proto_depIdxs = nil
}
