syntax = "proto3";

package  Cuttlefish;

option go_package = "github.com/cestlascorpion/Cuttlefish;cuttlefish";

service cuttlefish {
  rpc GetTentacle(GetTentacleReq) returns (GetTentacleResp) {}
  rpc BatchGetTentacle(BatchGetTentacleReq) returns (BatchGetTentacleResp) {}
  rpc SetTentacle(SetTentacleReq) returns (SetTentacleResp) {}
  rpc BatchSetTentacle(BatchSetTentacleReq) returns (BatchSetTentacleResp) {}
  rpc DelTentacle(DelTentacleReq) returns (DelTentacleResp) {}
  rpc BatchDelTentacle(BatchDelTentacleReq) returns (BatchDelTentacleResp) {}
}

message Tentacle {
  uint32 uid = 1;
  string key = 2;
  map<string, string> val = 3;
}

message TentacleList {
  repeated Tentacle tentacle_list = 1;
}

message GetTentacleReq {
  uint32 uid = 1;
}

message GetTentacleResp {
  repeated Tentacle info = 1;
}

message BatchGetTentacleReq {
  repeated uint32 uid_list = 1;
}

message BatchGetTentacleResp {
  map<uint32, TentacleList> info_list = 1;
}

message SetTentacleReq {
  Tentacle info = 1;
}

message SetTentacleResp {
  bool online = 1;
}

message BatchSetTentacleReq {
  map<uint32, TentacleList> info_list = 1;
}

message BatchSetTentacleResp {
  map<uint32, bool> result = 1;
}

message DelTentacleReq {
  Tentacle info = 1;
}

message DelTentacleResp {
  bool offline = 1;
}

message BatchDelTentacleReq {
  map<uint32, TentacleList> info_list = 1;
}

message BatchDelTentacleResp {
  map<uint32, bool> result = 1;
}