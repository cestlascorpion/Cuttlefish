syntax = "proto3";

package  Cuttlefish;

option go_package = "github.com/cestlascorpion/Cuttlefish;cuttlefish";

service cuttlefish {
  rpc GetTentacle(GetTentacleReq) returns (GetTentacleResp) {}
  rpc BatchGetTentacle(BatchGetTentacleReq) returns (BatchGetTentacleResp) {}

  rpc PeekTentacle(PeekTentacleReq) returns (PeekTentacleResp) {}
  rpc BatchPeekTentacle(BatchPeekTentacleReq) returns (BatchPeekTentacleResp) {}

  rpc SetTentacle(SetTentacleReq) returns (SetTentacleResp) {}
  rpc BatchSetTentacle(BatchSetTentacleReq) returns (BatchSetTentacleResp) {}

  rpc DelTentacle(DelTentacleReq) returns (DelTentacleResp) {}
  rpc BatchDelTentacle(BatchDelTentacleReq) returns (BatchDelTentacleResp) {}

  rpc GetTentacleHistory(GetTentacleHistoryReq) returns (GetTentacleHistoryResp) {}
}

message EgK {
  string proxy = 1;
  string seqId = 2;
}

message EgV {
  int64 ts = 1;
  string desc = 2;
}

message Tentacle {
  string key = 1; // eg: serialized EgK
  string val = 2; // eg: serialized EgV
}

message TentacleInfo {
  repeated Tentacle tentacle_list = 1;
}

message GetTentacleReq {
  uint32 uid = 1;
}

message GetTentacleResp {
  repeated Tentacle tentacle_list = 1;
}

message BatchGetTentacleReq {
  repeated uint32 uid_list = 1;
}

message BatchGetTentacleResp {
  map<uint32, TentacleInfo> info_list = 1;
}

message PeekTentacleReq {
  uint32 uid = 1;
}

message PeekTentacleResp {
  bool exists = 1;
}

message BatchPeekTentacleReq {
  repeated uint32 uid_list = 1;
}

message BatchPeekTentacleResp {
  map<uint32, bool> result = 1;
}

message SetTentacleReq {
  uint32 id = 1;
  repeated Tentacle tentacle_list = 2;
}

message SetTentacleResp {
  bool online = 1;
}

message BatchSetTentacleReq {
  map<uint32, TentacleInfo> info_list = 1;
}

message BatchSetTentacleResp {
  map<uint32, bool> result = 1;
}

message DelTentacleReq {
  uint32 id = 1;
  repeated Tentacle tentacle_list = 2;
}

message DelTentacleResp {
  bool offline = 1;
}

message BatchDelTentacleReq {
  map<uint32, TentacleInfo> info_list = 1;
}

message BatchDelTentacleResp {
  map<uint32, bool> result = 1;
}

message HistoryInfo {
  bool st = 1; // online - true; offline - false
  int64 ts = 2;
}

message GetTentacleHistoryReq {
  uint32 id = 1;
  int64 from = 2;
  int64 to = 3;
}

message GetTentacleHistoryResp {
  repeated HistoryInfo info_list = 1;
}